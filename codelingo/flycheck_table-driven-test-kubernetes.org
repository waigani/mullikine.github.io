#+TITLE: Get help on Kubernetes' table-driven tests
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="https://mullikine.github.io/org-main.css"/>
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="https://mullikine.github.io/magit.css"/>

* Table-driven tests
https://dave.cheney.net/2013/06/09/writing-table-driven-tests-in-go

* heruistic
At the heart of all table driven tests is the table itself, which
provides the inputs and expected results of the function under test.

** Only check ~.go~ files which are integration tests
Find all files in the integration test folder with paths that match ~'^.*_test\.go$'.~

[[/home/shane/var/smulliga/source/git/kubernetes/kubernetes/test/integration][test/integration]]

*** For each test ~func Test...~ in the file
**** Are there multiple ~Errorf("Expected~ lines within the test? Then this infers there are multiple scenarios / inputs
Because either we have duplicated code for testing more than one input, or the test can fail in multiple ways, which indicates it should be broken up.
I think we can assume the tests are testing only one thing, so checking for multiple ~Errorf("Expected~ within the test may be a good way to check for multiple inputs.

#+BEGIN_SRC sh
  t.Errorf("Expected status one of %v, but got %v", r.statusCodes, resp.StatusCode)
#+END_SRC

#+BEGIN_SRC sh
  cd "$HOME$MYGIT/kubernetes/kubernetes/test/integration"; eack 'Errorf.*Expect'
#+END_SRC

***** If a test case is found which throws multiple errors then check the following for the antipattern
There must exist a slice of type struct which has a field of type ~map[X]bool~ where ~X~ is any type.
A range must also exist to iterate over the slice of structs.

For example, this field.
https://github.com/kubernetes/kubernetes/blob/master/test/integration/auth/auth_test.go#L959

#+BEGIN_SRC go
  if _, ok := r.statusCodes[resp.StatusCode]; !ok {
          t.Logf("case %v", r)
          t.Errorf("Expected status one of %v, but got %v", r.statusCodes, resp.StatusCode)
          t.Errorf("Body: %v", string(b))
#+END_SRC