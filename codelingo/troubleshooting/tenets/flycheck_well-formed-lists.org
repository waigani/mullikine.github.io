#+TITLE: troubleshooting new tenet ~well-formed-lists~
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="https://mullikine.github.io/org-main.css"/>
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="https://mullikine.github.io/magit.css"/>

* ~example.go~
#+BEGIN_SRC go
  package main
  
  type KindOfList struct {
  	metav1.TypeMeta `json:",inline"`
  	metav1.ListMeta `json:"metadata,omitempty" protobuf:"bytes,1,opt,name=metadata"`
  	Items           []PodTemplate `json:"items" protobuf:"bytes,2,rep,name=items"`
  }
  
  type AnotherKindOfList struct {
  	metav1.TypeMeta `json:",inline"`
  	metav1.ListMeta `json:"metadata,omitempty" protobuf:"bytes,1,opt,name=metadata"`
  }
#+END_SRC

* This ~codelingo.yaml~ fails
#+BEGIN_SRC yaml
  tenets:
    - name: well-formed-lists
      flows:
        codelingo/docs:
          title: Well Formed Lists
          body: |
            All lists use the required `items` field to contain the array of objects they return.
        codelingo/review:
          comment: This is a list and must contain an `items` field.
      query: |
        import codelingo/ast/go
        
        go.file(depth = any):
          go.decls:
            go.gen_decl:
              go.type_spec:
                @review comment
                go.ident:
                  name as listName
                go.struct_type:
                  go.field_list:
                    go.field:
                      go.selector_expr:
                        go.ident:
                          name == "metav1"
                        go.ident:
                          name == "TypeMeta"
                    go.field:
                      go.selector_expr:
                        go.ident:
                          name == "metav1"
                        go.ident:
                          name == "ListMeta"
                    go.field:
                      go.names:
                        go.ident:
                          name == "Items"
#+END_SRC

** I get 4 matches, all in the same place
#+BEGIN_SRC text
Running: $HOME/scripts/rs -nc
        -nogit
        -noswap
        $HOME/source/git/mullikine/codelingo/k8/well-formed-lists/
        /tmp/td_wdMzlqbN/temp_repo
/usr/bin/rsync  -a -rtlhx -pug -s  --inplace --append   --exclude .cache  --exclude .git/ --exclude .gitignore --exclude TODO  --exclude '*~' --exclude '.#*'  $HOME/source/git/mullikine/codelingo/k8/well-formed-lists/ /tmp/td_wdMzlqbN/temp_repo
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
Syncing your repo...
Running review flow...
example.go:3:16

    This is a list and must contain an `items` field.


    ...
    package main

  + type KindOfList struct {
        metav1.TypeMeta `json:",inline"`
        metav1.ListMeta `json:"metadata,omitempty" protobuf:"bytes,1,opt,name=metadata"`
    ...

[o]pen [k]eep [d]iscard : k
example.go:3:16

    This is a list and must contain an `items` field.


    ...
    package main

  + type KindOfList struct {
        metav1.TypeMeta `json:",inline"`
        metav1.ListMeta `json:"metadata,omitempty" protobuf:"bytes,1,opt,name=metadata"`
    ...

[o]pen [k]eep [d]iscard : k
example.go:3:16

    This is a list and must contain an `items` field.


    ...
    package main

  + type KindOfList struct {
        metav1.TypeMeta `json:",inline"`
        metav1.ListMeta `json:"metadata,omitempty" protobuf:"bytes,1,opt,name=metadata"`
    ...

[o]pen [k]eep [d]iscard : k
example.go:3:16

    This is a list and must contain an `items` field.


    ...
    package main

  + type KindOfList struct {
        metav1.TypeMeta `json:",inline"`
        metav1.ListMeta `json:"metadata,omitempty" protobuf:"bytes,1,opt,name=metadata"`
    ...

[o]pen [k]eep [d]iscard : k
Done! 4 issues found.
#+END_SRC
