#+TITLE: troubleshooting new tenet ~well-named-lists~
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="https://mullikine.github.io/org-main.css"/>
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="https://mullikine.github.io/magit.css"/>

* ~example.go~
#+BEGIN_SRC go
  package main
  
  type KindOfList struct {
  	metav1.TypeMeta `json:",inline"`
  	metav1.ListMeta `json:"metadata,omitempty" protobuf:"bytes,1,opt,name=metadata"`
  }
  
  type AnotherKind struct {
  	metav1.TypeMeta `json:",inline"`
  	metav1.ListMeta `json:"metadata,omitempty" protobuf:"bytes,1,opt,name=metadata"`
  }
#+END_SRC

* This ~codelingo.yaml~ fails
#+BEGIN_SRC yaml
  funcs:
    - name: missingListSuffix
      type: asserter
      body: |
        function (str) {
          return !str.match(/.*List$/);
        }
  tenets:
    - name: well-named-lists
      flows:
        codelingo/docs:
          title: Well Named Lists
          body: |
            The name of a list kind must end with List.
        codelingo/review:
          comment: The kind `{{reviewListName}}` is a collection of resources and its name must end in `List`.
      query: |
        import codelingo/ast/go
        
        go.file(depth = any):
          go.decls:
            go.gen_decl:
              go.type_spec:
                @review comment
                go.ident:
                  @var reviewListName
                  name as listName
                  missingListSuffix(listName)
                go.struct_type:
                  go.field_list:
                    go.field:
                      go.selector_expr:
                        go.ident:
                          name == "metav1"
                        go.ident:
                          name == "TypeMeta"
                    go.field:
                      go.selector_expr:
                        go.ident:
                          name == "metav1"
                        go.ident:
                          name == "ListMeta"
#+END_SRC

** With error
#+BEGIN_SRC text
  mullikine hit a uncaught error: "var reviewListName" can only decorate a fact
  /home/dev/projects/src/github.com/codelingo/platform/flow/flows/clair/result/buildissues.go:78: "var reviewListName" can only decorate a fact
#+END_SRC