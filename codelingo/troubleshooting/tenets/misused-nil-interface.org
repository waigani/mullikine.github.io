#+TITLE: troubleshooting new tenet ~misused-nil-interface~
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="https://mullikine.github.io/org-main.css"/>
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="https://mullikine.github.io/magit.css"/>

* Problem
Hitting lexicon error. Preventing me from running a review.

** ~example.go~
#+BEGIN_SRC go
  // ./example.go
  package main
  
  import "fmt"
  import "testing"
  
  type Cat interface {
  	Meow()
  }
  
  type Tabby struct{}
  
  func (*Tabby) Meow() { fmt.Println("meow") }
  
  // Must return something that is like 'Cat'. A 'Tabby' is like 'Cat' because it has a 'Meow' function
  func GetACat() Cat {
  	var myTabby *Tabby = nil
  	// Oops, we forgot to set myTabby to a real value
  	return myTabby
  }
  
  func TestGetACat(t *testing.T) {
  	// This test does not do what was intended. It's never nil because it's a pointer to a pointer
  	if GetACat() == nil {
  		t.Errorf("Forgot to return a real cat!")
  	}
  }
  
  // I am only testing the above circumstances, precisely, for the the moment
  
  func main() {
  }
  
  // Heuristic:
  // ‾‾‾‾‾‾‾‾‾‾
  // look for 'varname == nil' test where varname is a pointer (of type interface pointer?) to a pointer to nil.
  
#+END_SRC

** This ~codelingo.yaml~ fails
#+BEGIN_SRC yaml
  funcs:
    - name: newConcat
      type: resolver
      body: |
        function (a, b) {
          return a.concat(b);
        }
  tenets:
    - name: misused-nil-interface
      flows:
        codelingo/docs:
          title: Misused Nil Interface
          body: |
            Nil interface is not the same as having a nil pointer in the interface.
        codelingo/review:
          comment: The variable being tested for nil, `{{varname}}` is a pointer to a pointer to nil.
      query: |
        import codelingo/ast/go
        
        go.file(depth = any):
          go.decls:
            go.gen_decl:
              go.type_spec:
                go.ident: # cat
                  type as interfacetype
                go.interface_type:
                  go.field_list:
                    go.field:
                      go.names:
                        go.ident: # meow
                          name as purevirtualfuncname
                          type == "func()"
            go.gen_decl:
              go.type_spec:
                go.ident:
                  type as typename
                go.struct_type
            go.func_decl: # meow of tabby
              go.field_list:
                go.field:
                  go.star_expr:
                    go.ident: # tabby
                      type == typename
              go.ident: # meow
                name == purevirtualfuncname
              go.func_type
            go.func_decl:
              go.ident: # getacat
                name as factoryfuncname
              go.func_type:
                go.field_list
                go.field_list: # the 2nd field list specifies the return parameters. this is an important distinction here but without an 'order:' fact, clql does not know this
                  go.field:
                    go.ident:
                      type == interfacetype
              go.block_stmt:
                go.list:
                  go.decl_stmt:
                    go.gen_decl:
                      go.value_spec:
                        go.names:
                          go.ident:
                            type == newConcat("*/", typename)
                        go.star_expr:
                          go.ident:
                            type == typename
                        go.values:
                          go.ident:
                            name == "nil" # important. set pointer to pointer to nil
                  go.return_stmt:
                    go.results:
                      go.ident:
                        type == newConcat("*/", typename)
            go.func_decl: # TestGetACat
              go.block_stmt:
                go.binary_expr(depth = 2):
                  go.call_expr:
                    go.ident:
                      name == factoryfuncname
                  @review comment
                  go.ident:
                    name == "nil" # important. test is equal to nil
#+END_SRC

** annotated ~tty-output.log~
#+BEGIN_SRC text
  Constructing new git repo in temp folder... :: Thu Nov  1 14:45:49 NZDT 2018
  ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
  Running: $HOME/scripts/rs -nc
          -nogit
          -noswap
          $HOME/source/git/mullikine/codelingo/tenets/codelingo/k8/misused-nil-interface/
          /tmp/td_misused-nil-interfaceOlr89C
  /usr/bin/rsync  -a -rtlhx -pug -s  --inplace --append   --exclude .cache  --exclude .git/ --exclude .gitignore --exclude TODO  --exclude '*~' --exclude '.#*'  $HOME/source/git/mullikine/codelingo/tenets/codelingo/k8/misused-nil-interface/ /tmp/td_misused-nil-interfaceOlr89C
  ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
  /tmp/td_misused-nil-interfaceOlr89C
  working_dir (initial): /tmp/td_misused-nil-interfaceOlr89C
  Syncing your repo...
  Running review flow...
  Sorry, an error occurred while processing your request. Please try again.
  <Check slack error>
  exit status 1
  review finished
  Reformulate?
  working_dir (loop): /tmp/td_misused-nil-interfaceOlr89C
  : B
  working_dir: /tmp/td_misused-nil-interfaceOlr89C
  Continue?
#+END_SRC

** repository info
| tenet source
|-
| [[https://github.com/mullikine/tenets/blob/master/blog/misused-nil-interface][tenets/blog/misused-nil-interface at master  mullikine/tenets  GitHub]]

| org
|-
| [[https://github.com/mullikine/mullikine.github.io/blob/master/codelingo/troubleshooting/tenets/misused-nil-interface.org][github.com/mullikine/mullikine.github.io/blob/master/codelingo/troubleshooting/tenets/misused-nil-interface.org]]

** https://github.com/codelingo/codelingo/blob/master
|command|value|
|-
|cat /etc/issue|Ubuntu 16.04.4 LTS \n \l
|vc url|https://github.com/codelingo/codelingo
|vc get-hash|eae3300ad7c32994725f90344f7cc25edfee6eca
|vc branch|master
|go version|go version go1.11.1 linux/amd64

#+BEGIN_SRC text
commit eae3300ad7c32994725f90344f7cc25edfee6eca
Author: Jesse Meek <waigani@gmail.com>
Date:   Sat Oct 27 10:37:36 2018 +1300

    Disable test Tenet until mem spike is fixed.
#+END_SRC

** git@github.com:mullikine/lingo.git/blob/master
|command|value|
|-
|cat /etc/issue|Ubuntu 16.04.4 LTS \n \l
|vc url|git@github.com:mullikine/lingo.git
|vc get-hash|fa9b4edd1dcad69f83892282d69877ab51f4e89c
|vc branch|master
|go version|go version go1.11.1 linux/amd64

#+BEGIN_SRC text
commit fa9b4edd1dcad69f83892282d69877ab51f4e89c
Merge: f34abad d1910ac
Author: BlakeMScurr <blake@codelingo.io>
Date:   Wed Oct 17 17:45:51 2018 +1300

    Merge pull request #424 from BlakeMScurr/docs-update
    
    Update doc fields.
#+END_SRC
