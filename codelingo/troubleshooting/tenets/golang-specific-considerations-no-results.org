#+TITLE: troubleshooting new tenet ~golang-specific-considerations~ - no results
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="https://mullikine.github.io/org-main.css"/>
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="https://mullikine.github.io/magit.css"/>

* Problem
Individually, both the ~gen_delc~ and the ~func_decl~ match, but not together.
Together they yield no results.

Matching the ~func_decl~ only, you get two matches, one with type = ~unresolved~.

** ~example.go~
#+BEGIN_SRC go
  // ./example/constructor-returns-interface.go
  package mypack
  
  type Person interface {
    Greet()
  }
  
  type person struct {
    name string
    age int
  }
  
  func (p person) Greet() {
    fmt.Printf("Hi! My name is %s", p.name)
  }
  
  // Here, NewPerson returns an interface, and not the person struct itself
  func NewPerson(name string, age int) Person {
    return person{
      name: name,
      age: age,
    };
  }
  
  func NewConcretePerson(name string, age int) person {
    return person{
      name: name,
      age: age,
    };
  }
  // ./example/interface-too-many-methods.go
  package mypack
  
  type smallInterface interface {
  	surfaceArea() float64
  	volume() float64
  }
  
  type excessiveInterface interface {
  	perimeter() float64
  	surfaceArea() float64
  	volume() float64
  	diameter() float64
  	radius() float64
  	circumference() float64
  }
  
  // ./example/use-pointer-arg-for-worker.go
  package mypack
  
  // good
  func NewGoodWorkerGood() (*GoodWorker) {
  }
  
  // bad
  func NewBadWorkerBad() (worker.Worker) {
  }
  
#+END_SRChm

** This ~codelingo.yaml~ fails
#+BEGIN_SRC yaml
  funcs:
    - name: namedLikeAWorkerConstructor
      type: asserter
      body: |
        function(text) {
          var re = new RegExp("New[A-Za-z]\+Worker")
          return re.test(text)
        }
  tenets:
    - name: interface-too-many-methods
      flows:
        codelingo/docs:
          title: Interface Has Too Many Methods
          body: |
            Awesome interfaces are small. >4 methods is a code smell. Split out large interfaces into semantically grouped methods.
        codelingo/review:
          comment: This interface has more than 4 methods. Consider splitting this interface up according to semantically grouped methods.
      query: |
        import codelingo/ast/go
        
        go.file(depth = any):
          go.decls:
            go.gen_decl:
              go.type_spec:
                @review comment
                go.ident
                # Unfortunately, this does not match > 4 methods. It
                # matches any interface. Probably need to use properties
                # to differentiate
                go.interface_type:
                  go.field_list:
                    go.field:
                      go.func_type
                    go.field:
                      go.func_type
                    go.field:
                      go.func_type
                    go.field:
                      go.func_type
                    go.field:
                      go.func_type
    - name: constructor-returns-interface
      flows:
        codelingo/docs:
          title: Constructor Returns An Interface
          body: |
            If a constructor returns an interface instead of a concrete type, it's almost certainly wrong.
        codelingo/review:
          comment: This constructor returns `{{returnType}}` (`{{interfaceType}}` is defined here) an interface rather than a concrete type. This is probably wrong. Did you intend to make an interface factory method?
      query: |
        import codelingo/ast/go
        
        go.file(depth = any):
          go.decls:
            # Individually, both the gen_delc and the func_decl match, but not together
            go.gen_decl:
              go.type_spec:
                go.ident:
                  type as interfaceType
                go.interface_type
            # This constructor returns `/resource/example/constructor-returns-interface.go.Person` an interface rather than a concrete type. This is probably wrong. Did you intend to make an interface factory method?
            # This constructor returns `@unresolved` an interface rather than a concrete type. This is probably wrong. Did you intend to make an interface factory method?
            go.func_decl:
              @review comment
              go.ident
              go.func_type:
                go.field_list
                go.field_list:
                  go.field:
                    go.ident:
                      type as returnType
#+END_SRC

** annotated ~tty-output.log~

When the following is commented out:

#+BEGIN_SRC yaml
  # go.gen_decl:
  #   go.type_spec:
  #     go.ident:
  #       type as interfaceType
  #     go.interface_type
#+END_SRC

I hit this on matching ~func_type~:

#+BEGIN_SRC text
  example/constructor-returns-interface.go:24:23

      This constructor returns `/resource/example/constructor-returns-interface.go.person` an interface rather than a concrete type. This is probably wrong. Did you intend to make an interface factory method?


      ...
      }

    + func NewConcretePerson(name string, age int) person {
        return person{
          name: name,
      ...

  [o]pen [k]eep [d]iscard : k
  example/constructor-returns-interface.go:24:23

      This constructor returns `@unresolved` an interface rather than a concrete type. This is probably wrong. Did you intend to make an interface factory method?


      ...
      }

    + func NewConcretePerson(name string, age int) person {
        return person{
          name: name,
      ...

  [o]pen [k]eep [d]iscard : k
  rpc error: code = Internal desc = stream terminated by RST_STREAM with error code: INTERNAL_ERROR
#+END_SRC

** repository info
| tenet source                                                                   |
|--------------------------------------------------------------------------------|
| [[https://github.com/mullikine/tenets/tree/master/blog/golang-specific-considerations][tenets/blog/golang-specific-considerations at master  mullikine/tenets  GitHub]] |

| org                                                                                                                      |
|--------------------------------------------------------------------------------------------------------------------------|
| [[https://github.com/mullikine/mullikine.github.io/tree/master/codelingo/troubleshooting/tenets/golang-specific-considerations.org][github.com/mullikine/mullikine.github.io/tree/master/codelingo/troubleshooting/tenets/golang-specific-considerations.org]] |

** repo state
+ url :: https://github.com/codelingo/codelingo/blob/master

| command        | value                                    |
|----------------+------------------------------------------|
| cat /etc/issue | Ubuntu 16.04.4 LTS \n \l                 |
| vc url         | https://github.com/codelingo/codelingo   |
| vc get-hash    | 1e408167efc4edd5b2bffbb675459cd0b6a08ff4 |
| vc branch      | master                                   |
| go version     | go version go1.11.1 linux/amd64          |

*** recent commits
#+BEGIN_SRC text
  commit 1e408167efc4edd5b2bffbb675459cd0b6a08ff4
  Merge: 0a78b4e 1a6cbff
  Author: Shane Mulligan <mullikine@gmail.com>
  
      Merge pull request #197 from Daanikus/comment-first-word-as-subject
  
  commit 1a6cbff22710927084ed465da16c77367650fd34
  Author: daanikus <daanikus@gmail.com>
  
      Updated expected.json file
#+END_SRC
*** ~.codelingoignore~
#+BEGIN_SRC text
  vendor/
#+END_SRC

** repo state
+ url :: git@github.com:mullikine/lingo/blob/master

| command        | value                                    |
|----------------+------------------------------------------|
| cat /etc/issue | Ubuntu 16.04.4 LTS \n \l                 |
| vc url         | git@github.com:mullikine/lingo           |
| vc get-hash    | 88ea7cd829c5368c565e143a1395946fc83f0d2d |
| vc branch      | master                                   |
| go version     | go version go1.11.1 linux/amd64          |

*** recent commits
#+BEGIN_SRC text
  commit 88ea7cd829c5368c565e143a1395946fc83f0d2d
  Author: Emerson Wood <13581922+emersonwood@users.noreply.github.com>
  
      Update version v0.7.2 (#433)
  
  commit 9322dc849176903ad1e543f16edff82c0cccd0ea
  Merge: 5660a4b 35e69f7
  Author: BlakeMScurr <blake@codelingo.io>
  
      Merge pull request #399 from BlakeMScurr/update-default
#+END_SRC
