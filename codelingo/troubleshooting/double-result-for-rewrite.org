#+TITLE: troubleshooting rewrite for new tenet ~shadowed-func-parameter~
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="org-main.css"/>
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="magit.css"/>

* ~example.go~
#+BEGIN_SRC go
  package main

  import "fmt"
  import "errors"

  func tryTheThing() (string, error) {
          return "hi", nil
  }

  var ErrDidNotWork = errors.New("did not work")

  func DoTheThing(reallyDoIt bool) (err error) {
    if reallyDoIt {
      result, err := tryTheThing()
      if err != nil || result != "it worked" {
        err = ErrDidNotWork
      }
    }
    return err
  }

  func main() {
          e := DoTheThing(true)
          fmt.Printf("%v\n", e)
          // e.g. result, err := tryTheThing(). look for err := within a function where err is a parameter
  }
#+END_SRC

** This ~codelingo.yaml~ fails
#+BEGIN_SRC yaml
  tenets:
    - name: shadowed-func-parameter
      flows:
        codelingo/rewrite:
          newname1: something_cool
          newname2: something_cool
          newname3: something_cool
        codelingo/docs:
          title: Shadowed Function Parameter
          body: |
            Shadowing is considered harmful to your sanity.
        codelingo/review:
          comment: Identifier `{{paraname}}` := shadows parameter `{{paraname}}`. Rename one of them to make the code easier to read.
      query: |
        import codelingo/ast/go
      
        go.file(depth = any):
          go.decls:
            go.func_decl:
              go.func_type:
                go.field_list: # could be a function argument or return parameter
                  go.field:
                    go.names: # important to distinguish from type name
                      @rewrite -r -m newname3
                      go.ident:
                        name as paraname
              go.block_stmt:
                go.list:
                  go.list(depth = any):
                    go.assign_stmt:
                      go.lhs: # important
                        @review comment
                        @rewrite -r -m newname2
                        go.ident:
                          name == paraname
                @rewrite -r -m newname3
                go.ident(depth = any):
                  name == paraname
#+END_SRC

** With slack error
 #+BEGIN_SRC text
    mullikine hit a uncaught error: Double result for decorator: namespace:"rewrite" value:"-r -m newname3"
 #+END_SRC